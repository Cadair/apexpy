version: '{branch}-{build}'
build: off
configuration: Release
environment:
  global:
    WITH_COMPILER: 'cmd /E:ON /V:ON /C .\ci\appveyor-with-compiler.cmd'
  matrix:
    - TESTENV: '2.7-nocover-64'
      WINDOWS_SDK_VERSION: v7.0
      PYTHON_VERSION: '2.7'
      MINICONDA_HOME: C:\Miniconda-x64

    - TESTENV: '2.7-nocover-32'
      WINDOWS_SDK_VERSION: v7.0
      PYTHON_VERSION: '2.7'
      MINICONDA_HOME: C:\Miniconda

    - TESTENV: '3.3-nocover-64'
      WINDOWS_SDK_VERSION: v7.1
      PYTHON_VERSION: '3.3'
      MINICONDA_HOME: C:\Miniconda-x64

    - TESTENV: '3.3-nocover-32'
      WINDOWS_SDK_VERSION: v7.1
      PYTHON_VERSION: '3.3'
      MINICONDA_HOME: C:\Miniconda

    - TESTENV: '3.4-nocover-64'
      WINDOWS_SDK_VERSION: v7.1
      PYTHON_VERSION: '3.4'
      MINICONDA_HOME: C:\Miniconda-x64

    - TESTENV: '3.4-nocover-32'
      WINDOWS_SDK_VERSION: v7.0
      PYTHON_VERSION: '3.4'
      MINICONDA_HOME: C:\Miniconda

    - TESTENV: '3.5-nocover-64'
      PYTHON_VERSION: '3.5'
      MINICONDA_HOME: C:\Miniconda-x64

    - TESTENV: '3.5-nocover-32'
      PYTHON_VERSION: '3.5'
      MINICONDA_HOME: C:\Miniconda

init:
  - ps: echo $env:TESTENV
install:
  - set PATH=%PATH%;C:\msys64\mingw64\bin
  - '%MINICONDA_HOME%\Scripts\conda config --set always_yes yes'
  - '%MINICONDA_HOME%\Scripts\conda update -q conda'
  - '%MINICONDA_HOME%\Scripts\conda create -q -p C:\pythontest python=%PYTHON_VERSION% libpython pytest numpy'
  - '%MINICONDA_HOME%\Scripts\activate C:\pythontest'
  - where python
  - where pip
  - pip install pytest-cov
  - python setup.py clean --all build_ext --force --inplace --compiler=mingw32
  - python setup.py develop
test_script:
  - py.test
  - python setup.py check --strict --metadata --restructuredtext
  - check-manifest {toxinidir}
  - flake8 src tests

after_test:
  # if tagged commit, build/upload wheel
#  - IF "%TOXENV%"=="2.7-nocover" IF "%PYTHON_ARCH%"=="32" (%WITH_COMPILER% %TOXPYTHON% setup.py sdist)
#  - IF "%APPVEYOR_REPO_TAG%"=="true" IF NOT "%TOXENV%"=="%TOXENV:nocover=%" (
#      %WITH_COMPILER% %TOXPYTHON% setup.py bdist_wheel &&
#      %PYTHON_HOME%\Scripts\pip install twine &&
#      %PYTHON_HOME%\Scripts\twine upload -u %PYPI_USER% -p %PYPI_PASS% dist/*
#    )
  # not sure if this is needed
  #- deactivate

artifacts:
  - path: dist\*
matrix:
  allow_failures:
    - TOXENV: 'check'
### To enable remote debugging uncomment this:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

