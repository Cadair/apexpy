version: '{branch}-{build}'
build: off
cache:
  - '%LOCALAPPDATA%\pip\Cache'
environment:
  global:
    WITH_COMPILER: 'cmd /E:ON /V:ON /C .\ci\appveyor-with-compiler.cmd'
    TOX_USE_SITEPACKAGES: true
  matrix:
    - TOXENV: check
      PYTHON_HOME: C:\Python27
      PYTHON_VERSION: '2.7'
      PYTHON_ARCH: '32'
    - TOXENV: '2.7-nocover'
      TOXPYTHON: C:\python27\python.exe
      WINDOWS_SDK_VERSION: v7.0
      PYTHON_HOME: C:\python27
      PYTHON_VERSION: '2.7'
      PYTHON_ARCH: '32'
    - TOXENV: '2.7-nocover'
      TOXPYTHON: C:\python27-x64\python.exe
      WINDOWS_SDK_VERSION: v7.0
      PYTHON_HOME: C:\python27-x64
      PYTHON_VERSION: '2.7'
      PYTHON_ARCH: '64'
    - TOXENV: '3.3-nocover'
      TOXPYTHON: C:\python33\python.exe
      WINDOWS_SDK_VERSION: v7.1
      PYTHON_HOME: C:\python33
      PYTHON_VERSION: '3.3'
      PYTHON_ARCH: '32'
    - TOXENV: '3.3-nocover'
      TOXPYTHON: C:\python33-x64\python.exe
      WINDOWS_SDK_VERSION: v7.1
      PYTHON_HOME: C:\python33-x64
      PYTHON_VERSION: '3.3'
      PYTHON_ARCH: '64'
    - TOXENV: '3.4-nocover'
      TOXPYTHON: C:\python34\python.exe
      WINDOWS_SDK_VERSION: v7.0
      PYTHON_HOME: C:\python34
      PYTHON_VERSION: '3.4'
      PYTHON_ARCH: '32'
    - TOXENV: '3.4-nocover'
      TOXPYTHON: C:\python34-x64\python.exe
      WINDOWS_SDK_VERSION: v7.1
      PYTHON_HOME: C:\python34-x64
      PYTHON_VERSION: '3.4'
      PYTHON_ARCH: '64'
    - TOXENV: '3.5-nocover'
      TOXPYTHON: C:\python35\python.exe
      PYTHON_HOME: C:\python35
      PYTHON_VERSION: '3.5'
      PYTHON_ARCH: '32'
    - TOXENV: '3.5-nocover'
      TOXPYTHON: C:\python35-x64\python.exe
      PYTHON_HOME: C:\python35-x64
      PYTHON_VERSION: '3.5'
      PYTHON_ARCH: '64'
init:
  - ps: echo $env:TOXENV
  - ps: ls C:\Python*
  - dir /s /b C:\MinGW*
  - dir /s /b C:\msys*
install:
  - python -u ci\appveyor-bootstrap.py
  - '%PYTHON_HOME%\Scripts\virtualenv --version'
  - '%PYTHON_HOME%\Scripts\easy_install --version'
  - '%PYTHON_HOME%\Scripts\pip --version'
  - '%PYTHON_HOME%\Scripts\tox --version'
  - C:\msys64\usr\bin\bash -lc "pacman -S mingw-w64-i686-gcc*"
  - set PATH=%PATH%;C:\msys64\usr\bin\
  # test that building works before long numpy install
  - C:\Miniconda-x64\Scripts\conda config --set always_yes yes --set changeps1 no
  - C:\Miniconda-x64\Scripts\conda update conda
  - C:\Miniconda-x64\Scripts\conda install pip numpy
  - C:\Miniconda-x64\python setup.py clean --all build_ext --force --inplace
test_script:
  - '%WITH_COMPILER% %PYTHON_HOME%\Scripts\tox'

after_test:
  # if tagged commit, build/upload wheel
  - IF "%TOXENV%"=="2.7-nocover" IF "%PYTHON_ARCH%"=="32" (%WITH_COMPILER% %TOXPYTHON% setup.py sdist)
  - IF "%APPVEYOR_REPO_TAG%"=="true" IF NOT "%TOXENV%"=="%TOXENV:nocover=%" (
      %WITH_COMPILER% %TOXPYTHON% setup.py bdist_wheel &&
      %PYTHON_HOME%\Scripts\pip install twine &&
      %PYTHON_HOME%\Scripts\twine upload -u %PYPI_USER% -p %PYPI_PASS% dist/*
    )

on_failure:
  - ps: dir "env:"
  - ps: get-content .tox\*\log\*
artifacts:
  - path: dist\*
matrix:
  allow_failures:
    - TOXENV: 'check'
### To enable remote debugging uncomment this:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

